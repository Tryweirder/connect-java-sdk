/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.squareup.connect.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Filter based on [Order Fulfillment](#type-orderfulfillment) information.
 */
@ApiModel(description = "Filter based on [Order Fulfillment](#type-orderfulfillment) information.")

public class SearchOrdersFulfillmentFilter {
  @JsonProperty("fulfillment_types")
  private List<String> fulfillmentTypes = new ArrayList<String>();

  @JsonProperty("fulfillment_states")
  private List<String> fulfillmentStates = new ArrayList<String>();

  public SearchOrdersFulfillmentFilter fulfillmentTypes(List<String> fulfillmentTypes) {
    this.fulfillmentTypes = fulfillmentTypes;
    return this;
  }

  public SearchOrdersFulfillmentFilter addFulfillmentTypesItem(String fulfillmentTypesItem) {
    this.fulfillmentTypes.add(fulfillmentTypesItem);
    return this;
  }

   /**
   * List of [fulfillment types](#type-orderfulfillmenttype) to filter for. Will return orders if any of its fulfillments match any of the fulfillment types listed in this field. See [OrderFulfillmentType](#type-orderfulfillmenttype) for possible values
   * @return fulfillmentTypes
  **/
  @ApiModelProperty(required = true, value = "List of [fulfillment types](#type-orderfulfillmenttype) to filter for. Will return orders if any of its fulfillments match any of the fulfillment types listed in this field. See [OrderFulfillmentType](#type-orderfulfillmenttype) for possible values")
  public List<String> getFulfillmentTypes() {
    return fulfillmentTypes;
  }

  public void setFulfillmentTypes(List<String> fulfillmentTypes) {
    this.fulfillmentTypes = fulfillmentTypes;
  }

  public SearchOrdersFulfillmentFilter fulfillmentStates(List<String> fulfillmentStates) {
    this.fulfillmentStates = fulfillmentStates;
    return this;
  }

  public SearchOrdersFulfillmentFilter addFulfillmentStatesItem(String fulfillmentStatesItem) {
    this.fulfillmentStates.add(fulfillmentStatesItem);
    return this;
  }

   /**
   * List of [fulfillment states](#type-orderfulfillmentstate) to filter for. Will return orders if any of its fulfillments match any of the fulfillment states listed in this field. See [OrderFulfillmentState](#type-orderfulfillmentstate) for possible values
   * @return fulfillmentStates
  **/
  @ApiModelProperty(value = "List of [fulfillment states](#type-orderfulfillmentstate) to filter for. Will return orders if any of its fulfillments match any of the fulfillment states listed in this field. See [OrderFulfillmentState](#type-orderfulfillmentstate) for possible values")
  public List<String> getFulfillmentStates() {
    return fulfillmentStates;
  }

  public void setFulfillmentStates(List<String> fulfillmentStates) {
    this.fulfillmentStates = fulfillmentStates;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchOrdersFulfillmentFilter searchOrdersFulfillmentFilter = (SearchOrdersFulfillmentFilter) o;
    return Objects.equals(this.fulfillmentTypes, searchOrdersFulfillmentFilter.fulfillmentTypes) &&
        Objects.equals(this.fulfillmentStates, searchOrdersFulfillmentFilter.fulfillmentStates);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fulfillmentTypes, fulfillmentStates);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchOrdersFulfillmentFilter {\n");

    sb.append("    fulfillmentTypes: ").append(toIndentedString(fulfillmentTypes)).append("\n");
    sb.append("    fulfillmentStates: ").append(toIndentedString(fulfillmentStates)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

