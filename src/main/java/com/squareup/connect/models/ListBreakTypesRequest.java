/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.squareup.connect.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * A request for a filtered set of &#x60;BreakType&#x60; objects
 */
@ApiModel(description = "A request for a filtered set of `BreakType` objects")

public class ListBreakTypesRequest {
  @JsonProperty("location_id")
  private String locationId = null;

  @JsonProperty("limit")
  private Integer limit = null;

  @JsonProperty("cursor")
  private String cursor = null;

  public ListBreakTypesRequest locationId(String locationId) {
    this.locationId = locationId;
    return this;
  }

   /**
   * Filter Break Types returned to only those that are associated with the specified location.
   * @return locationId
  **/
  @ApiModelProperty(value = "Filter Break Types returned to only those that are associated with the specified location.")
  public String getLocationId() {
    return locationId;
  }

  public void setLocationId(String locationId) {
    this.locationId = locationId;
  }

  public ListBreakTypesRequest limit(Integer limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Maximum number of Break Types to return per page. Can range between 1 and 200. The default is the maximum at 200.
   * minimum: 1
   * maximum: 200
   * @return limit
  **/
  @ApiModelProperty(value = "Maximum number of Break Types to return per page. Can range between 1 and 200. The default is the maximum at 200.")
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public ListBreakTypesRequest cursor(String cursor) {
    this.cursor = cursor;
    return this;
  }

   /**
   * Pointer to the next page of Break Type results to fetch.
   * @return cursor
  **/
  @ApiModelProperty(value = "Pointer to the next page of Break Type results to fetch.")
  public String getCursor() {
    return cursor;
  }

  public void setCursor(String cursor) {
    this.cursor = cursor;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListBreakTypesRequest listBreakTypesRequest = (ListBreakTypesRequest) o;
    return Objects.equals(this.locationId, listBreakTypesRequest.locationId) &&
        Objects.equals(this.limit, listBreakTypesRequest.limit) &&
        Objects.equals(this.cursor, listBreakTypesRequest.cursor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locationId, limit, cursor);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListBreakTypesRequest {\n");
    
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    cursor: ").append(toIndentedString(cursor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

