/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.squareup.connect.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Represents a collection of catalog objects for the purpose of applying a [PricingRule](#type-pricingrule). Including a catalog object will include all of its subtypes. For example, including a category in a product set will include all of its items and associated item variations in the product set. Including an item in a product set will also include its item variations.
 */
@ApiModel(description = "Represents a collection of catalog objects for the purpose of applying a [PricingRule](#type-pricingrule). Including a catalog object will include all of its subtypes. For example, including a category in a product set will include all of its items and associated item variations in the product set. Including an item in a product set will also include its item variations.")

public class CatalogProductSet {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("product_ids_any")
  private List<String> productIdsAny = new ArrayList<String>();

  @JsonProperty("product_ids_all")
  private List<String> productIdsAll = new ArrayList<String>();

  @JsonProperty("quantity_exact")
  private Long quantityExact = null;

  @JsonProperty("quantity_min")
  private Long quantityMin = null;

  @JsonProperty("quantity_max")
  private Long quantityMax = null;

  @JsonProperty("all_products")
  private Boolean allProducts = null;

  public CatalogProductSet name(String name) {
    this.name = name;
    return this;
  }

   /**
   *  User-defined name for the product set. For example, \"Clearance Items\" or \"Winter Sale Items\".
   * @return name
  **/
  @ApiModelProperty(value = " User-defined name for the product set. For example, \"Clearance Items\" or \"Winter Sale Items\".")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CatalogProductSet productIdsAny(List<String> productIdsAny) {
    this.productIdsAny = productIdsAny;
    return this;
  }

  public CatalogProductSet addProductIdsAnyItem(String productIdsAnyItem) {
    this.productIdsAny.add(productIdsAnyItem);
    return this;
  }

   /**
   * Unique IDs for any [CatalogObjects](#type-catalogobject)s to include in this product set. Any number of these catalog objects can be in an order for a pricing rule to apply.  This can be used with `product_ids_all` in a parent [CatalogProductSet](#type-catalogproductset) to match groups of products for a bulk discount, such as a discount for an entree and side combo.  Only one of `product_ids_all`, `product_ids_any`, or `all_products` can be set.  Max: 500 catalog object IDs.
   * @return productIdsAny
  **/
  @ApiModelProperty(value = "Unique IDs for any [CatalogObjects](#type-catalogobject)s to include in this product set. Any number of these catalog objects can be in an order for a pricing rule to apply.  This can be used with `product_ids_all` in a parent [CatalogProductSet](#type-catalogproductset) to match groups of products for a bulk discount, such as a discount for an entree and side combo.  Only one of `product_ids_all`, `product_ids_any`, or `all_products` can be set.  Max: 500 catalog object IDs.")
  public List<String> getProductIdsAny() {
    return productIdsAny;
  }

  public void setProductIdsAny(List<String> productIdsAny) {
    this.productIdsAny = productIdsAny;
  }

  public CatalogProductSet productIdsAll(List<String> productIdsAll) {
    this.productIdsAll = productIdsAll;
    return this;
  }

  public CatalogProductSet addProductIdsAllItem(String productIdsAllItem) {
    this.productIdsAll.add(productIdsAllItem);
    return this;
  }

   /**
   * Unique IDs for [CatalogObjects](#type-catalogobject) to include in this product set. All objects in this set must be included in an order for a pricing rule to apply.  Only one of `product_ids_all`, `product_ids_any`, or `all_products` can be set.  Max: 500 catalog object IDs.
   * @return productIdsAll
  **/
  @ApiModelProperty(value = "Unique IDs for [CatalogObjects](#type-catalogobject) to include in this product set. All objects in this set must be included in an order for a pricing rule to apply.  Only one of `product_ids_all`, `product_ids_any`, or `all_products` can be set.  Max: 500 catalog object IDs.")
  public List<String> getProductIdsAll() {
    return productIdsAll;
  }

  public void setProductIdsAll(List<String> productIdsAll) {
    this.productIdsAll = productIdsAll;
  }

  public CatalogProductSet quantityExact(Long quantityExact) {
    this.quantityExact = quantityExact;
    return this;
  }

   /**
   * If set, there must be exactly this many items from `products_any` or `products_all` in the cart for the discount to apply.  Cannot be combined with either `quantity_min` or `quantity_max`.
   * @return quantityExact
  **/
  @ApiModelProperty(value = "If set, there must be exactly this many items from `products_any` or `products_all` in the cart for the discount to apply.  Cannot be combined with either `quantity_min` or `quantity_max`.")
  public Long getQuantityExact() {
    return quantityExact;
  }

  public void setQuantityExact(Long quantityExact) {
    this.quantityExact = quantityExact;
  }

  public CatalogProductSet quantityMin(Long quantityMin) {
    this.quantityMin = quantityMin;
    return this;
  }

   /**
   * If set, there must be at least this many items from `products_any` or `products_all` in a cart for the discount to apply. See `quantity_exact`. Defaults to 0 if `quantity_exact`, `quantity_min` and `quantity_max` are all unspecified.
   * @return quantityMin
  **/
  @ApiModelProperty(value = "If set, there must be at least this many items from `products_any` or `products_all` in a cart for the discount to apply. See `quantity_exact`. Defaults to 0 if `quantity_exact`, `quantity_min` and `quantity_max` are all unspecified.")
  public Long getQuantityMin() {
    return quantityMin;
  }

  public void setQuantityMin(Long quantityMin) {
    this.quantityMin = quantityMin;
  }

  public CatalogProductSet quantityMax(Long quantityMax) {
    this.quantityMax = quantityMax;
    return this;
  }

   /**
   * If set, the pricing rule will apply to a maximum of this many items from `products_any` or `products_all`.
   * @return quantityMax
  **/
  @ApiModelProperty(value = "If set, the pricing rule will apply to a maximum of this many items from `products_any` or `products_all`.")
  public Long getQuantityMax() {
    return quantityMax;
  }

  public void setQuantityMax(Long quantityMax) {
    this.quantityMax = quantityMax;
  }

  public CatalogProductSet allProducts(Boolean allProducts) {
    this.allProducts = allProducts;
    return this;
  }

   /**
   * If set to `true`, the product set will include every item in the catalog.  Only one of `product_ids_all`, `product_ids_any`, or `all_products` can be set.
   * @return allProducts
  **/
  @ApiModelProperty(value = "If set to `true`, the product set will include every item in the catalog.  Only one of `product_ids_all`, `product_ids_any`, or `all_products` can be set.")
  public Boolean getAllProducts() {
    return allProducts;
  }

  public void setAllProducts(Boolean allProducts) {
    this.allProducts = allProducts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CatalogProductSet catalogProductSet = (CatalogProductSet) o;
    return Objects.equals(this.name, catalogProductSet.name) &&
        Objects.equals(this.productIdsAny, catalogProductSet.productIdsAny) &&
        Objects.equals(this.productIdsAll, catalogProductSet.productIdsAll) &&
        Objects.equals(this.quantityExact, catalogProductSet.quantityExact) &&
        Objects.equals(this.quantityMin, catalogProductSet.quantityMin) &&
        Objects.equals(this.quantityMax, catalogProductSet.quantityMax) &&
        Objects.equals(this.allProducts, catalogProductSet.allProducts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, productIdsAny, productIdsAll, quantityExact, quantityMin, quantityMax, allProducts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CatalogProductSet {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    productIdsAny: ").append(toIndentedString(productIdsAny)).append("\n");
    sb.append("    productIdsAll: ").append(toIndentedString(productIdsAll)).append("\n");
    sb.append("    quantityExact: ").append(toIndentedString(quantityExact)).append("\n");
    sb.append("    quantityMin: ").append(toIndentedString(quantityMin)).append("\n");
    sb.append("    quantityMax: ").append(toIndentedString(quantityMax)).append("\n");
    sb.append("    allProducts: ").append(toIndentedString(allProducts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

