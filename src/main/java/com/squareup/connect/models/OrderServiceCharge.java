/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.squareup.connect.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.squareup.connect.models.Money;
import com.squareup.connect.models.OrderLineItemTax;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Represents a service charge applied to an order.
 */
@ApiModel(description = "Represents a service charge applied to an order.")

public class OrderServiceCharge {
  @JsonProperty("uid")
  private String uid = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("catalog_object_id")
  private String catalogObjectId = null;

  @JsonProperty("percentage")
  private String percentage = null;

  @JsonProperty("amount_money")
  private Money amountMoney = null;

  @JsonProperty("applied_money")
  private Money appliedMoney = null;

  @JsonProperty("total_money")
  private Money totalMoney = null;

  @JsonProperty("total_tax_money")
  private Money totalTaxMoney = null;

  @JsonProperty("calculation_phase")
  private String calculationPhase = null;

  @JsonProperty("taxable")
  private Boolean taxable = null;

  @JsonProperty("taxes")
  private List<OrderLineItemTax> taxes = new ArrayList<OrderLineItemTax>();

  public OrderServiceCharge uid(String uid) {
    this.uid = uid;
    return this;
  }

   /**
   * Unique ID that identifies the service charge only within this order.  This field is read-only.
   * @return uid
  **/
  @ApiModelProperty(value = "Unique ID that identifies the service charge only within this order.  This field is read-only.")
  public String getUid() {
    return uid;
  }

  public void setUid(String uid) {
    this.uid = uid;
  }

  public OrderServiceCharge name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the service charge.
   * @return name
  **/
  @ApiModelProperty(value = "The name of the service charge.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public OrderServiceCharge catalogObjectId(String catalogObjectId) {
    this.catalogObjectId = catalogObjectId;
    return this;
  }

   /**
   * The catalog object ID referencing the service charge [CatalogObject](#type-catalogobject).
   * @return catalogObjectId
  **/
  @ApiModelProperty(value = "The catalog object ID referencing the service charge [CatalogObject](#type-catalogobject).")
  public String getCatalogObjectId() {
    return catalogObjectId;
  }

  public void setCatalogObjectId(String catalogObjectId) {
    this.catalogObjectId = catalogObjectId;
  }

  public OrderServiceCharge percentage(String percentage) {
    this.percentage = percentage;
    return this;
  }

   /**
   * The service charge percentage, as a string representation of a decimal number.  For example, `7.25` indicates 7.25%  Exactly one of `percentage` or `amount_money` should be set.
   * @return percentage
  **/
  @ApiModelProperty(value = "The service charge percentage, as a string representation of a decimal number.  For example, `7.25` indicates 7.25%  Exactly one of `percentage` or `amount_money` should be set.")
  public String getPercentage() {
    return percentage;
  }

  public void setPercentage(String percentage) {
    this.percentage = percentage;
  }

  public OrderServiceCharge amountMoney(Money amountMoney) {
    this.amountMoney = amountMoney;
    return this;
  }

   /**
   * The amount of a non-percentage based service charge.  Exactly one of `percentage` or `amount_money` should be set.
   * @return amountMoney
  **/
  @ApiModelProperty(value = "The amount of a non-percentage based service charge.  Exactly one of `percentage` or `amount_money` should be set.")
  public Money getAmountMoney() {
    return amountMoney;
  }

  public void setAmountMoney(Money amountMoney) {
    this.amountMoney = amountMoney;
  }

  public OrderServiceCharge appliedMoney(Money appliedMoney) {
    this.appliedMoney = appliedMoney;
    return this;
  }

   /**
   * The amount of money applied to the order by the service charge, as calculated by the server.  For fixed-amount service charges, `applied_money` is equal to `amount_money`.  For percentage-based service charges, `applied_money` is the money calculated using the percentage. The `applied_money` field will include any inclusive tax amounts as well.  This field is read-only.
   * @return appliedMoney
  **/
  @ApiModelProperty(value = "The amount of money applied to the order by the service charge, as calculated by the server.  For fixed-amount service charges, `applied_money` is equal to `amount_money`.  For percentage-based service charges, `applied_money` is the money calculated using the percentage. The `applied_money` field will include any inclusive tax amounts as well.  This field is read-only.")
  public Money getAppliedMoney() {
    return appliedMoney;
  }

  public void setAppliedMoney(Money appliedMoney) {
    this.appliedMoney = appliedMoney;
  }

  public OrderServiceCharge totalMoney(Money totalMoney) {
    this.totalMoney = totalMoney;
    return this;
  }

   /**
   * The total amount of money to collect for the service charge.  Note that `total_money` does not equal `applied_money` plus `total_tax_money` if an inclusive tax is applied to the service charge since the inclusive tax amount will be included in both `applied_money` and `total_tax_money`.  This field is read-only.
   * @return totalMoney
  **/
  @ApiModelProperty(value = "The total amount of money to collect for the service charge.  Note that `total_money` does not equal `applied_money` plus `total_tax_money` if an inclusive tax is applied to the service charge since the inclusive tax amount will be included in both `applied_money` and `total_tax_money`.  This field is read-only.")
  public Money getTotalMoney() {
    return totalMoney;
  }

  public void setTotalMoney(Money totalMoney) {
    this.totalMoney = totalMoney;
  }

  public OrderServiceCharge totalTaxMoney(Money totalTaxMoney) {
    this.totalTaxMoney = totalTaxMoney;
    return this;
  }

   /**
   * The total amount of tax money to collect for the service charge.  This field is read-only.
   * @return totalTaxMoney
  **/
  @ApiModelProperty(value = "The total amount of tax money to collect for the service charge.  This field is read-only.")
  public Money getTotalTaxMoney() {
    return totalTaxMoney;
  }

  public void setTotalTaxMoney(Money totalTaxMoney) {
    this.totalTaxMoney = totalTaxMoney;
  }

  public OrderServiceCharge calculationPhase(String calculationPhase) {
    this.calculationPhase = calculationPhase;
    return this;
  }

   /**
   * The calculation phase at which to apply the service charge. See [OrderServiceChargeCalculationPhase](#type-orderservicechargecalculationphase) for possible values
   * @return calculationPhase
  **/
  @ApiModelProperty(value = "The calculation phase at which to apply the service charge. See [OrderServiceChargeCalculationPhase](#type-orderservicechargecalculationphase) for possible values")
  public String getCalculationPhase() {
    return calculationPhase;
  }

  public void setCalculationPhase(String calculationPhase) {
    this.calculationPhase = calculationPhase;
  }

  public OrderServiceCharge taxable(Boolean taxable) {
    this.taxable = taxable;
    return this;
  }

   /**
   * Indicates whether the service charge can be taxed. If set to `true`, any order-level taxes will automatically apply to this service charge. Note that service charges calculated in the `TOTAL_PHASE` cannot be marked as taxable.
   * @return taxable
  **/
  @ApiModelProperty(value = "Indicates whether the service charge can be taxed. If set to `true`, any order-level taxes will automatically apply to this service charge. Note that service charges calculated in the `TOTAL_PHASE` cannot be marked as taxable.")
  public Boolean getTaxable() {
    return taxable;
  }

  public void setTaxable(Boolean taxable) {
    this.taxable = taxable;
  }

  public OrderServiceCharge taxes(List<OrderLineItemTax> taxes) {
    this.taxes = taxes;
    return this;
  }

  public OrderServiceCharge addTaxesItem(OrderLineItemTax taxesItem) {
    this.taxes.add(taxesItem);
    return this;
  }

   /**
   * Taxes applied to the service charge. By default, order-level taxes apply to service charges calculated in the `SUBTOTAL_PHASE` if `taxable` is set to `true`.
   * @return taxes
  **/
  @ApiModelProperty(value = "Taxes applied to the service charge. By default, order-level taxes apply to service charges calculated in the `SUBTOTAL_PHASE` if `taxable` is set to `true`.")
  public List<OrderLineItemTax> getTaxes() {
    return taxes;
  }

  public void setTaxes(List<OrderLineItemTax> taxes) {
    this.taxes = taxes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderServiceCharge orderServiceCharge = (OrderServiceCharge) o;
    return Objects.equals(this.uid, orderServiceCharge.uid) &&
        Objects.equals(this.name, orderServiceCharge.name) &&
        Objects.equals(this.catalogObjectId, orderServiceCharge.catalogObjectId) &&
        Objects.equals(this.percentage, orderServiceCharge.percentage) &&
        Objects.equals(this.amountMoney, orderServiceCharge.amountMoney) &&
        Objects.equals(this.appliedMoney, orderServiceCharge.appliedMoney) &&
        Objects.equals(this.totalMoney, orderServiceCharge.totalMoney) &&
        Objects.equals(this.totalTaxMoney, orderServiceCharge.totalTaxMoney) &&
        Objects.equals(this.calculationPhase, orderServiceCharge.calculationPhase) &&
        Objects.equals(this.taxable, orderServiceCharge.taxable) &&
        Objects.equals(this.taxes, orderServiceCharge.taxes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uid, name, catalogObjectId, percentage, amountMoney, appliedMoney, totalMoney, totalTaxMoney, calculationPhase, taxable, taxes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderServiceCharge {\n");

    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    catalogObjectId: ").append(toIndentedString(catalogObjectId)).append("\n");
    sb.append("    percentage: ").append(toIndentedString(percentage)).append("\n");
    sb.append("    amountMoney: ").append(toIndentedString(amountMoney)).append("\n");
    sb.append("    appliedMoney: ").append(toIndentedString(appliedMoney)).append("\n");
    sb.append("    totalMoney: ").append(toIndentedString(totalMoney)).append("\n");
    sb.append("    totalTaxMoney: ").append(toIndentedString(totalTaxMoney)).append("\n");
    sb.append("    calculationPhase: ").append(toIndentedString(calculationPhase)).append("\n");
    sb.append("    taxable: ").append(toIndentedString(taxable)).append("\n");
    sb.append("    taxes: ").append(toIndentedString(taxes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

