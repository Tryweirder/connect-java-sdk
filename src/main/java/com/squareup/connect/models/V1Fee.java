/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.squareup.connect.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * V1Fee
 */
@ApiModel(description = "V1Fee")

public class V1Fee {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("rate")
  private String rate = null;

  @JsonProperty("calculation_phase")
  private String calculationPhase = null;

  @JsonProperty("adjustment_type")
  private String adjustmentType = null;

  @JsonProperty("applies_to_custom_amounts")
  private Boolean appliesToCustomAmounts = null;

  @JsonProperty("enabled")
  private Boolean enabled = null;

  @JsonProperty("inclusion_type")
  private String inclusionType = null;

  @JsonProperty("type")
  private String type = null;

  @JsonProperty("v2_id")
  private String v2Id = null;

  public V1Fee id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The fee's unique ID.
   * @return id
  **/
  @ApiModelProperty(value = "The fee's unique ID.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public V1Fee name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The fee's name.
   * @return name
  **/
  @ApiModelProperty(value = "The fee's name.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public V1Fee rate(String rate) {
    this.rate = rate;
    return this;
  }

   /**
   * The rate of the fee, as a string representation of a decimal number. A value of 0.07 corresponds to a rate of 7%.
   * @return rate
  **/
  @ApiModelProperty(value = "The rate of the fee, as a string representation of a decimal number. A value of 0.07 corresponds to a rate of 7%.")
  public String getRate() {
    return rate;
  }

  public void setRate(String rate) {
    this.rate = rate;
  }

  public V1Fee calculationPhase(String calculationPhase) {
    this.calculationPhase = calculationPhase;
    return this;
  }

   /**
   * Forthcoming See [V1FeeCalculationPhase](#type-v1feecalculationphase) for possible values
   * @return calculationPhase
  **/
  @ApiModelProperty(value = "Forthcoming See [V1FeeCalculationPhase](#type-v1feecalculationphase) for possible values")
  public String getCalculationPhase() {
    return calculationPhase;
  }

  public void setCalculationPhase(String calculationPhase) {
    this.calculationPhase = calculationPhase;
  }

  public V1Fee adjustmentType(String adjustmentType) {
    this.adjustmentType = adjustmentType;
    return this;
  }

   /**
   * The type of adjustment the fee applies to a payment. Currently, this value is TAX for all fees. See [V1FeeAdjustmentType](#type-v1feeadjustmenttype) for possible values
   * @return adjustmentType
  **/
  @ApiModelProperty(value = "The type of adjustment the fee applies to a payment. Currently, this value is TAX for all fees. See [V1FeeAdjustmentType](#type-v1feeadjustmenttype) for possible values")
  public String getAdjustmentType() {
    return adjustmentType;
  }

  public void setAdjustmentType(String adjustmentType) {
    this.adjustmentType = adjustmentType;
  }

  public V1Fee appliesToCustomAmounts(Boolean appliesToCustomAmounts) {
    this.appliesToCustomAmounts = appliesToCustomAmounts;
    return this;
  }

   /**
   * If true, the fee applies to custom amounts entered into Square Register that are not associated with a particular item.
   * @return appliesToCustomAmounts
  **/
  @ApiModelProperty(value = "If true, the fee applies to custom amounts entered into Square Register that are not associated with a particular item.")
  public Boolean getAppliesToCustomAmounts() {
    return appliesToCustomAmounts;
  }

  public void setAppliesToCustomAmounts(Boolean appliesToCustomAmounts) {
    this.appliesToCustomAmounts = appliesToCustomAmounts;
  }

  public V1Fee enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * If true, the fee is applied to all appropriate items. If false, the fee is not applied at all.
   * @return enabled
  **/
  @ApiModelProperty(value = "If true, the fee is applied to all appropriate items. If false, the fee is not applied at all.")
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public V1Fee inclusionType(String inclusionType) {
    this.inclusionType = inclusionType;
    return this;
  }

   /**
   * Whether the fee is ADDITIVE or INCLUSIVE. See [V1FeeInclusionType](#type-v1feeinclusiontype) for possible values
   * @return inclusionType
  **/
  @ApiModelProperty(value = "Whether the fee is ADDITIVE or INCLUSIVE. See [V1FeeInclusionType](#type-v1feeinclusiontype) for possible values")
  public String getInclusionType() {
    return inclusionType;
  }

  public void setInclusionType(String inclusionType) {
    this.inclusionType = inclusionType;
  }

  public V1Fee type(String type) {
    this.type = type;
    return this;
  }

   /**
   * In countries with multiple classifications for sales taxes, indicates which classification the fee falls under. Currently relevant only to Canadian merchants. See [V1FeeType](#type-v1feetype) for possible values
   * @return type
  **/
  @ApiModelProperty(value = "In countries with multiple classifications for sales taxes, indicates which classification the fee falls under. Currently relevant only to Canadian merchants. See [V1FeeType](#type-v1feetype) for possible values")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public V1Fee v2Id(String v2Id) {
    this.v2Id = v2Id;
    return this;
  }

   /**
   * The ID of the CatalogObject in the Connect v2 API. Objects that are shared across multiple locations share the same v2 ID.
   * @return v2Id
  **/
  @ApiModelProperty(value = "The ID of the CatalogObject in the Connect v2 API. Objects that are shared across multiple locations share the same v2 ID.")
  public String getV2Id() {
    return v2Id;
  }

  public void setV2Id(String v2Id) {
    this.v2Id = v2Id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1Fee v1Fee = (V1Fee) o;
    return Objects.equals(this.id, v1Fee.id) &&
        Objects.equals(this.name, v1Fee.name) &&
        Objects.equals(this.rate, v1Fee.rate) &&
        Objects.equals(this.calculationPhase, v1Fee.calculationPhase) &&
        Objects.equals(this.adjustmentType, v1Fee.adjustmentType) &&
        Objects.equals(this.appliesToCustomAmounts, v1Fee.appliesToCustomAmounts) &&
        Objects.equals(this.enabled, v1Fee.enabled) &&
        Objects.equals(this.inclusionType, v1Fee.inclusionType) &&
        Objects.equals(this.type, v1Fee.type) &&
        Objects.equals(this.v2Id, v1Fee.v2Id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, rate, calculationPhase, adjustmentType, appliesToCustomAmounts, enabled, inclusionType, type, v2Id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1Fee {\n");

    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    rate: ").append(toIndentedString(rate)).append("\n");
    sb.append("    calculationPhase: ").append(toIndentedString(calculationPhase)).append("\n");
    sb.append("    adjustmentType: ").append(toIndentedString(adjustmentType)).append("\n");
    sb.append("    appliesToCustomAmounts: ").append(toIndentedString(appliesToCustomAmounts)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    inclusionType: ").append(toIndentedString(inclusionType)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    v2Id: ").append(toIndentedString(v2Id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

