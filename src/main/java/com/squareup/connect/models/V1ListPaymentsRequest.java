/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.squareup.connect.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * 
 */
@ApiModel(description = "")

public class V1ListPaymentsRequest {
  @JsonProperty("order")
  private String order = null;

  @JsonProperty("begin_time")
  private String beginTime = null;

  @JsonProperty("end_time")
  private String endTime = null;

  @JsonProperty("limit")
  private Integer limit = null;

  @JsonProperty("batch_token")
  private String batchToken = null;

  @JsonProperty("include_partial")
  private Boolean includePartial = null;

  public V1ListPaymentsRequest order(String order) {
    this.order = order;
    return this;
  }

   /**
   * The order in which payments are listed in the response. See [SortOrder](#type-sortorder) for possible values
   * @return order
  **/
  @ApiModelProperty(value = "The order in which payments are listed in the response. See [SortOrder](#type-sortorder) for possible values")
  public String getOrder() {
    return order;
  }

  public void setOrder(String order) {
    this.order = order;
  }

  public V1ListPaymentsRequest beginTime(String beginTime) {
    this.beginTime = beginTime;
    return this;
  }

   /**
   * The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year.
   * @return beginTime
  **/
  @ApiModelProperty(value = "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year.")
  public String getBeginTime() {
    return beginTime;
  }

  public void setBeginTime(String beginTime) {
    this.beginTime = beginTime;
  }

  public V1ListPaymentsRequest endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time.
   * @return endTime
  **/
  @ApiModelProperty(value = "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time.")
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }

  public V1ListPaymentsRequest limit(Integer limit) {
    this.limit = limit;
    return this;
  }

   /**
   * The maximum number of payments to return in a single response. This value cannot exceed 200.
   * @return limit
  **/
  @ApiModelProperty(value = "The maximum number of payments to return in a single response. This value cannot exceed 200.")
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public V1ListPaymentsRequest batchToken(String batchToken) {
    this.batchToken = batchToken;
    return this;
  }

   /**
   * A pagination cursor to retrieve the next set of results for your original query to the endpoint.
   * @return batchToken
  **/
  @ApiModelProperty(value = "A pagination cursor to retrieve the next set of results for your original query to the endpoint.")
  public String getBatchToken() {
    return batchToken;
  }

  public void setBatchToken(String batchToken) {
    this.batchToken = batchToken;
  }

  public V1ListPaymentsRequest includePartial(Boolean includePartial) {
    this.includePartial = includePartial;
    return this;
  }

   /**
   * Indicates whether or not to include partial payments in the response. Partial payments will have the tenders collected so far, but the itemizations will be empty until the payment is completed.
   * @return includePartial
  **/
  @ApiModelProperty(value = "Indicates whether or not to include partial payments in the response. Partial payments will have the tenders collected so far, but the itemizations will be empty until the payment is completed.")
  public Boolean getIncludePartial() {
    return includePartial;
  }

  public void setIncludePartial(Boolean includePartial) {
    this.includePartial = includePartial;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1ListPaymentsRequest v1ListPaymentsRequest = (V1ListPaymentsRequest) o;
    return Objects.equals(this.order, v1ListPaymentsRequest.order) &&
        Objects.equals(this.beginTime, v1ListPaymentsRequest.beginTime) &&
        Objects.equals(this.endTime, v1ListPaymentsRequest.endTime) &&
        Objects.equals(this.limit, v1ListPaymentsRequest.limit) &&
        Objects.equals(this.batchToken, v1ListPaymentsRequest.batchToken) &&
        Objects.equals(this.includePartial, v1ListPaymentsRequest.includePartial);
  }

  @Override
  public int hashCode() {
    return Objects.hash(order, beginTime, endTime, limit, batchToken, includePartial);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1ListPaymentsRequest {\n");
    
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    beginTime: ").append(toIndentedString(beginTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    batchToken: ").append(toIndentedString(batchToken)).append("\n");
    sb.append("    includePartial: ").append(toIndentedString(includePartial)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

