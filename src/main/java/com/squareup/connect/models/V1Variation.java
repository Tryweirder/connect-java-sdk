/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.squareup.connect.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.squareup.connect.models.V1Money;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * V1Variation
 */
@ApiModel(description = "V1Variation")

public class V1Variation {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("item_id")
  private String itemId = null;

  @JsonProperty("ordinal")
  private Integer ordinal = null;

  @JsonProperty("pricing_type")
  private String pricingType = null;

  @JsonProperty("price_money")
  private V1Money priceMoney = null;

  @JsonProperty("sku")
  private String sku = null;

  @JsonProperty("track_inventory")
  private Boolean trackInventory = null;

  @JsonProperty("inventory_alert_type")
  private String inventoryAlertType = null;

  @JsonProperty("inventory_alert_threshold")
  private Integer inventoryAlertThreshold = null;

  @JsonProperty("user_data")
  private String userData = null;

  @JsonProperty("v2_id")
  private String v2Id = null;

  public V1Variation id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The item variation's unique ID.
   * @return id
  **/
  @ApiModelProperty(value = "The item variation's unique ID.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public V1Variation name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The item variation's name.
   * @return name
  **/
  @ApiModelProperty(value = "The item variation's name.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public V1Variation itemId(String itemId) {
    this.itemId = itemId;
    return this;
  }

   /**
   * The ID of the variation's associated item.
   * @return itemId
  **/
  @ApiModelProperty(value = "The ID of the variation's associated item.")
  public String getItemId() {
    return itemId;
  }

  public void setItemId(String itemId) {
    this.itemId = itemId;
  }

  public V1Variation ordinal(Integer ordinal) {
    this.ordinal = ordinal;
    return this;
  }

   /**
   * Indicates the variation's list position when displayed in Square Register and the merchant dashboard. If more than one variation for the same item has the same ordinal value, those variations are displayed in alphabetical order
   * @return ordinal
  **/
  @ApiModelProperty(value = "Indicates the variation's list position when displayed in Square Register and the merchant dashboard. If more than one variation for the same item has the same ordinal value, those variations are displayed in alphabetical order")
  public Integer getOrdinal() {
    return ordinal;
  }

  public void setOrdinal(Integer ordinal) {
    this.ordinal = ordinal;
  }

  public V1Variation pricingType(String pricingType) {
    this.pricingType = pricingType;
    return this;
  }

   /**
   * Indicates whether the item variation's price is fixed or determined at the time of sale. See [V1VariationPricingType](#type-v1variationpricingtype) for possible values
   * @return pricingType
  **/
  @ApiModelProperty(value = "Indicates whether the item variation's price is fixed or determined at the time of sale. See [V1VariationPricingType](#type-v1variationpricingtype) for possible values")
  public String getPricingType() {
    return pricingType;
  }

  public void setPricingType(String pricingType) {
    this.pricingType = pricingType;
  }

  public V1Variation priceMoney(V1Money priceMoney) {
    this.priceMoney = priceMoney;
    return this;
  }

   /**
   * The item variation's price, if any.
   * @return priceMoney
  **/
  @ApiModelProperty(value = "The item variation's price, if any.")
  public V1Money getPriceMoney() {
    return priceMoney;
  }

  public void setPriceMoney(V1Money priceMoney) {
    this.priceMoney = priceMoney;
  }

  public V1Variation sku(String sku) {
    this.sku = sku;
    return this;
  }

   /**
   * The item variation's SKU, if any.
   * @return sku
  **/
  @ApiModelProperty(value = "The item variation's SKU, if any.")
  public String getSku() {
    return sku;
  }

  public void setSku(String sku) {
    this.sku = sku;
  }

  public V1Variation trackInventory(Boolean trackInventory) {
    this.trackInventory = trackInventory;
    return this;
  }

   /**
   * If true, inventory tracking is active for the variation.
   * @return trackInventory
  **/
  @ApiModelProperty(value = "If true, inventory tracking is active for the variation.")
  public Boolean getTrackInventory() {
    return trackInventory;
  }

  public void setTrackInventory(Boolean trackInventory) {
    this.trackInventory = trackInventory;
  }

  public V1Variation inventoryAlertType(String inventoryAlertType) {
    this.inventoryAlertType = inventoryAlertType;
    return this;
  }

   /**
   * Indicates whether the item variation displays an alert when its inventory quantity is less than or equal to its inventory_alert_threshold. See [V1VariationInventoryAlertType](#type-v1variationinventoryalerttype) for possible values
   * @return inventoryAlertType
  **/
  @ApiModelProperty(value = "Indicates whether the item variation displays an alert when its inventory quantity is less than or equal to its inventory_alert_threshold. See [V1VariationInventoryAlertType](#type-v1variationinventoryalerttype) for possible values")
  public String getInventoryAlertType() {
    return inventoryAlertType;
  }

  public void setInventoryAlertType(String inventoryAlertType) {
    this.inventoryAlertType = inventoryAlertType;
  }

  public V1Variation inventoryAlertThreshold(Integer inventoryAlertThreshold) {
    this.inventoryAlertThreshold = inventoryAlertThreshold;
    return this;
  }

   /**
   * If the inventory quantity for the variation is less than or equal to this value and inventory_alert_type is LOW_QUANTITY, the variation displays an alert in the merchant dashboard.
   * @return inventoryAlertThreshold
  **/
  @ApiModelProperty(value = "If the inventory quantity for the variation is less than or equal to this value and inventory_alert_type is LOW_QUANTITY, the variation displays an alert in the merchant dashboard.")
  public Integer getInventoryAlertThreshold() {
    return inventoryAlertThreshold;
  }

  public void setInventoryAlertThreshold(Integer inventoryAlertThreshold) {
    this.inventoryAlertThreshold = inventoryAlertThreshold;
  }

  public V1Variation userData(String userData) {
    this.userData = userData;
    return this;
  }

   /**
   * Arbitrary metadata associated with the variation. Cannot exceed 255 characters.
   * @return userData
  **/
  @ApiModelProperty(value = "Arbitrary metadata associated with the variation. Cannot exceed 255 characters.")
  public String getUserData() {
    return userData;
  }

  public void setUserData(String userData) {
    this.userData = userData;
  }

  public V1Variation v2Id(String v2Id) {
    this.v2Id = v2Id;
    return this;
  }

   /**
   * The ID of the CatalogObject in the Connect v2 API. Objects that are shared across multiple locations share the same v2 ID.
   * @return v2Id
  **/
  @ApiModelProperty(value = "The ID of the CatalogObject in the Connect v2 API. Objects that are shared across multiple locations share the same v2 ID.")
  public String getV2Id() {
    return v2Id;
  }

  public void setV2Id(String v2Id) {
    this.v2Id = v2Id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1Variation v1Variation = (V1Variation) o;
    return Objects.equals(this.id, v1Variation.id) &&
        Objects.equals(this.name, v1Variation.name) &&
        Objects.equals(this.itemId, v1Variation.itemId) &&
        Objects.equals(this.ordinal, v1Variation.ordinal) &&
        Objects.equals(this.pricingType, v1Variation.pricingType) &&
        Objects.equals(this.priceMoney, v1Variation.priceMoney) &&
        Objects.equals(this.sku, v1Variation.sku) &&
        Objects.equals(this.trackInventory, v1Variation.trackInventory) &&
        Objects.equals(this.inventoryAlertType, v1Variation.inventoryAlertType) &&
        Objects.equals(this.inventoryAlertThreshold, v1Variation.inventoryAlertThreshold) &&
        Objects.equals(this.userData, v1Variation.userData) &&
        Objects.equals(this.v2Id, v1Variation.v2Id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, itemId, ordinal, pricingType, priceMoney, sku, trackInventory, inventoryAlertType, inventoryAlertThreshold, userData, v2Id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1Variation {\n");

    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    ordinal: ").append(toIndentedString(ordinal)).append("\n");
    sb.append("    pricingType: ").append(toIndentedString(pricingType)).append("\n");
    sb.append("    priceMoney: ").append(toIndentedString(priceMoney)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    trackInventory: ").append(toIndentedString(trackInventory)).append("\n");
    sb.append("    inventoryAlertType: ").append(toIndentedString(inventoryAlertType)).append("\n");
    sb.append("    inventoryAlertThreshold: ").append(toIndentedString(inventoryAlertThreshold)).append("\n");
    sb.append("    userData: ").append(toIndentedString(userData)).append("\n");
    sb.append("    v2Id: ").append(toIndentedString(v2Id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

